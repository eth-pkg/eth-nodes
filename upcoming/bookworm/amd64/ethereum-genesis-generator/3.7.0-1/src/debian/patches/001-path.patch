Index: ethereum-genesis-generator-3.4.0/entrypoint.sh
===================================================================
--- ethereum-genesis-generator-3.4.0.orig/entrypoint.sh
+++ ethereum-genesis-generator-3.4.0/entrypoint.sh
@@ -1,39 +1,42 @@
 #!/bin/bash -e
-if [ -f /config/values.env ];
+
+# Copy recursively if not already exists in the current folder, do not overwrite
+cp -nR /etc/ethereum-genesis-generator/config . 
+
+if [ -f config/values.env ];
 then
-    source /config/values.env
+    source config/values.env 
+else 
+    source config/defaults.env
 fi
-source /defaults/defaults.env
 
 SERVER_ENABLED="${SERVER_ENABLED:-false}"
 SERVER_PORT="${SERVER_PORT:-8000}"
 WITHDRAWAL_ADDRESS="${WITHDRAWAL_ADDRESS:-0xf97e180c050e5Ab072211Ad2C213Eb5AEE4DF134}"
 PRESET_BASE="${PRESET_BASE:-mainnet}"
 gen_shared_files(){
-    . /apps/el-gen/.venv/bin/activate
     set -x
     # Shared files
-    mkdir -p /data/metadata
-    if ! [ -f "/data/jwt/jwtsecret" ]; then
-        mkdir -p /data/jwt
-        echo -n 0x$(openssl rand -hex 32 | tr -d "\n") > /data/jwt/jwtsecret
+    mkdir -p data/metadata
+    if ! [ -f "data/jwt/jwtsecret" ]; then
+        mkdir -p data/jwt
+        echo -n 0x$(openssl rand -hex 32 | tr -d "\n") > data/jwt/jwtsecret
     fi
-    if [ -f "/data/metadata/genesis.json" ]; then
-        terminalTotalDifficulty=$(cat /data/metadata/genesis.json | jq -r '.config.terminalTotalDifficulty | tostring')
-        sed -i "s/TERMINAL_TOTAL_DIFFICULTY:.*/TERMINAL_TOTAL_DIFFICULTY: $terminalTotalDifficulty/" /data/metadata/config.yaml
+    if [ -f "data/metadata/genesis.json" ]; then
+        terminalTotalDifficulty=$(cat data/metadata/genesis.json | jq -r '.config.terminalTotalDifficulty | tostring')
+        sed -i "s/TERMINAL_TOTAL_DIFFICULTY:.*/TERMINAL_TOTAL_DIFFICULTY: $terminalTotalDifficulty/" data/metadata/config.yaml
     fi
 }
 
 gen_el_config(){
-    . /apps/el-gen/.venv/bin/activate
     set -x
-    if ! [ -f "/data/metadata/genesis.json" ]; then
+    if ! [ -f "data/metadata/genesis.json" ]; then
         tmp_dir=$(mktemp -d -t ci-XXXXXXXXXX)
-        mkdir -p /data/metadata
-        envsubst < /config/el/genesis-config.yaml > $tmp_dir/genesis-config.yaml
-        python3 /apps/el-gen/genesis_geth.py $tmp_dir/genesis-config.yaml      > /data/metadata/genesis.json
-        python3 /apps/el-gen/genesis_chainspec.py $tmp_dir/genesis-config.yaml > /data/metadata/chainspec.json
-        python3 /apps/el-gen/genesis_besu.py $tmp_dir/genesis-config.yaml > /data/metadata/besu.json
+        mkdir -p data/metadata
+        envsubst < config/el/genesis-config.yaml > $tmp_dir/genesis-config.yaml
+        /usr/lib/ethereum-genesis-generator/apps/el-gen/genesis_geth $tmp_dir/genesis-config.yaml      > data/metadata/genesis.json
+        /usr/lib/ethereum-genesis-generator/apps/el-gen/genesis_chainspec $tmp_dir/genesis-config.yaml > data/metadata/chainspec.json
+        /usr/lib/ethereum-genesis-generator/apps/el-gen/genesis_besu $tmp_dir/genesis-config.yaml > data/metadata/besu.json
     else
         echo "el genesis already exists. skipping generation..."
     fi
@@ -50,41 +53,40 @@ gen_minimal_config() {
   )
 
   for key in "${!replacements[@]}"; do
-    sed -i "s/$key:.*/$key: ${replacements[$key]}/" /data/metadata/config.yaml
+    sed -i "s/$key:.*/$key: ${replacements[$key]}/" data/metadata/config.yaml
   done
 }
 
 gen_cl_config(){
-    . /apps/el-gen/.venv/bin/activate
     set -x
     # Consensus layer: Check if genesis already exists
-    if ! [ -f "/data/metadata/genesis.ssz" ]; then
+    if ! [ -f "data/metadata/genesis.ssz" ]; then
         tmp_dir=$(mktemp -d -t ci-XXXXXXXXXX)
-        mkdir -p /data/metadata
-        mkdir -p /data/parsed
+        mkdir -p data/metadata
+        mkdir -p data/parsed
         HUMAN_READABLE_TIMESTAMP=$(date -u -d @"$GENESIS_TIMESTAMP" +"%Y-%b-%d %I:%M:%S %p %Z")
         COMMENT="# $HUMAN_READABLE_TIMESTAMP"
-        envsubst < /config/cl/config.yaml > /data/metadata/config.yaml
-        sed -i "s/#HUMAN_TIME_PLACEHOLDER/$COMMENT/" /data/metadata/config.yaml
-        envsubst < /config/cl/mnemonics.yaml > $tmp_dir/mnemonics.yaml
+        envsubst < config/cl/config.yaml > data/metadata/config.yaml
+        sed -i "s/#HUMAN_TIME_PLACEHOLDER/$COMMENT/" data/metadata/config.yaml
+        envsubst < config/cl/mnemonics.yaml > $tmp_dir/mnemonics.yaml
         # Conditionally override values if preset is "minimal"
         if [[ "$PRESET_BASE" == "minimal" ]]; then
           gen_minimal_config
         fi
-        cp $tmp_dir/mnemonics.yaml /data/metadata/mnemonics.yaml
+        cp $tmp_dir/mnemonics.yaml data/metadata/mnemonics.yaml
         # Create deposit_contract.txt and deploy_block.txt
-        grep DEPOSIT_CONTRACT_ADDRESS /data/metadata/config.yaml | cut -d " " -f2 > /data/metadata/deposit_contract.txt
-        echo $CL_EXEC_BLOCK > /data/metadata/deposit_contract_block.txt
-        echo $BEACON_STATIC_ENR > /data/metadata/bootstrap_nodes.txt
+        grep DEPOSIT_CONTRACT_ADDRESS data/metadata/config.yaml | cut -d " " -f2 > data/metadata/deposit_contract.txt
+        echo $CL_EXEC_BLOCK > data/metadata/deposit_contract_block.txt
+        echo $BEACON_STATIC_ENR > data/metadata/bootstrap_nodes.txt
         # Envsubst mnemonics
-        envsubst < /config/cl/mnemonics.yaml > $tmp_dir/mnemonics.yaml
+        envsubst < config/cl/mnemonics.yaml > $tmp_dir/mnemonics.yaml
         # Generate genesis
         genesis_args=(
           deneb
-          --config /data/metadata/config.yaml
+          --config data/metadata/config.yaml
           --mnemonics $tmp_dir/mnemonics.yaml
-          --tranches-dir /data/metadata/tranches
-          --state-output /data/metadata/genesis.ssz
+          --tranches-dir data/metadata/tranches
+          --state-output data/metadata/genesis.ssz
           --preset-phase0 $PRESET_BASE
           --preset-altair $PRESET_BASE
           --preset-bellatrix $PRESET_BASE
@@ -99,13 +101,13 @@ gen_cl_config(){
         elif [[ $SHADOW_FORK_RPC != "" ]]; then
           genesis_args+=(--shadow-fork-eth1-rpc=$SHADOW_FORK_RPC --eth1-config "")
         else
-          genesis_args+=(--eth1-config /data/metadata/genesis.json)
+          genesis_args+=(--eth1-config data/metadata/genesis.json)
         fi
         if ! [ -z "$CL_ADDITIONAL_VALIDATORS" ]; then
           if [[ $CL_ADDITIONAL_VALIDATORS = /* ]]; then
             validators_file=$CL_ADDITIONAL_VALIDATORS
           else
-            validators_file="/config/$CL_ADDITIONAL_VALIDATORS"
+            validators_file="config/$CL_ADDITIONAL_VALIDATORS"
           fi
           genesis_args+=(--additional-validators $validators_file)
         fi
@@ -118,15 +120,15 @@ gen_cl_config(){
           --preset-bellatrix $PRESET_BASE
           --preset-capella $PRESET_BASE
           --preset-deneb $PRESET_BASE
-          /data/metadata/genesis.ssz
+          data/metadata/genesis.ssz
         )
-        /usr/local/bin/eth2-testnet-genesis "${genesis_args[@]}"
-        /usr/local/bin/zcli "${zcli_args[@]}" > /data/parsed/parsedConsensusGenesis.json
+        eth2-testnet-genesis "${genesis_args[@]}"
+        zcli "${zcli_args[@]}" > data/parsed/parsedConsensusGenesis.json
         echo "Genesis args: ${genesis_args[@]}"
-        echo "Genesis block number: $(jq -r '.latest_execution_payload_header.block_number' /data/parsed/parsedConsensusGenesis.json)"
-        echo "Genesis block hash: $(jq -r '.latest_execution_payload_header.block_hash' /data/parsed/parsedConsensusGenesis.json)"
-        jq -r '.eth1_data.block_hash' /data/parsed/parsedConsensusGenesis.json| tr -d '\n' > /data/metadata/deposit_contract_block_hash.txt
-        jq -r '.genesis_validators_root' /data/parsed/parsedConsensusGenesis.json | tr -d '\n' > /data/metadata/genesis_validators_root.txt
+        echo "Genesis block number: $(jq -r '.latest_execution_payload_header.block_number' data/parsed/parsedConsensusGenesis.json)"
+        echo "Genesis block hash: $(jq -r '.latest_execution_payload_header.block_hash' data/parsed/parsedConsensusGenesis.json)"
+        jq -r '.eth1_data.block_hash' data/parsed/parsedConsensusGenesis.json| tr -d '\n' > data/metadata/deposit_contract_block_hash.txt
+        jq -r '.genesis_validators_root' data/parsed/parsedConsensusGenesis.json | tr -d '\n' > data/metadata/genesis_validators_root.txt
     else
         echo "cl genesis already exists. skipping generation..."
     fi
@@ -157,5 +159,5 @@ esac
 
 # Start webserver
 if [ "$SERVER_ENABLED" = true ] ; then
-  cd /data && exec python3 -m http.server "$SERVER_PORT"
+  cd data && exec python3 -m http.server "$SERVER_PORT"
 fi
Index: ethereum-genesis-generator-3.4.0/apps/el-gen/genesis_besu.py
===================================================================
--- ethereum-genesis-generator-3.4.0.orig/apps/el-gen/genesis_besu.py
+++ ethereum-genesis-generator-3.4.0/apps/el-gen/genesis_besu.py
@@ -5,11 +5,11 @@ import sys
 
 w3.eth.account.enable_unaudited_hdwallet_features()
 
-testnet_config_path = "genesis-config.yaml"
-mainnet_config_path = "/apps/el-gen/mainnet/besu_genesis.json"
-sepolia_config_path = "/apps/el-gen/sepolia/besu_genesis.json"
-goerli_config_path = "/apps/el-gen/goerli/besu_genesis.json"
-holesky_config_path = "/apps/el-gen/holesky/besu_genesis.json"
+testnet_config_path = "config/el/genesis-config.yaml"
+mainnet_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/mainnet/besu_genesis.json"
+sepolia_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/sepolia/besu_genesis.json"
+goerli_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/goerli/besu_genesis.json"
+holesky_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/holesky/besu_genesis.json"
 combined_allocs = {}
 
 if len(sys.argv) > 1:
@@ -183,13 +183,13 @@ else:
         add_alloc_entry(addr, account)
 
 
-if 'electra_fork_epoch' in data:
+if 'electra_fork_epoch' in data and data['electra_fork_epoch'] is not None:
     out['config']['pragueTime'] = \
         int(data['genesis_timestamp']) + \
         int(data['genesis_delay']) + \
         (int(data['electra_fork_epoch']) * ( 32 if data['preset_base']=='mainnet' else 8 ) * int(data['slot_duration_in_seconds']))
 
-if 'fulu_fork_epoch' in data:
+if 'fulu_fork_epoch' in data and data['fulu_fork_epoch'] is not None:
     out['config']['osakaTime'] =  \
         int(data['genesis_timestamp']) + \
         int(data['genesis_delay']) + \
Index: ethereum-genesis-generator-3.4.0/apps/el-gen/genesis_chainspec.py
===================================================================
--- ethereum-genesis-generator-3.4.0.orig/apps/el-gen/genesis_chainspec.py
+++ ethereum-genesis-generator-3.4.0/apps/el-gen/genesis_chainspec.py
@@ -5,11 +5,11 @@ import sys
 
 w3.eth.account.enable_unaudited_hdwallet_features()
 
-testnet_config_path = "genesis-config.yaml"
-mainnet_config_path = "/apps/el-gen/mainnet/chainspec.json"
-sepolia_config_path = "/apps/el-gen/sepolia/chainspec.json"
-goerli_config_path = "/apps/el-gen/goerli/chainspec.json"
-holesky_config_path = "/apps/el-gen/holesky/chainspec.json"
+testnet_config_path = "config/el/genesis-config.yaml"
+mainnet_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/mainnet/chainspec.json"
+sepolia_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/sepolia/chainspec.json"
+goerli_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/goerli/chainspec.json"
+holesky_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/holesky/chainspec.json"
 combined_allocs = {}
 if len(sys.argv) > 1:
     testnet_config_path = sys.argv[1]
@@ -223,7 +223,7 @@ else:
     for addr, account in data['additional_preloaded_contracts'].items():
         add_alloc_entry(addr, account)
 
-if 'electra_fork_epoch' in data:
+if 'electra_fork_epoch' in data and data['electra_fork_epoch'] is not None:
     out['params']['eip2537TransitionTimestamp']= hex(
         int(data['genesis_timestamp']) +
         int(data['genesis_delay']) +
@@ -258,7 +258,7 @@ if 'electra_fork_epoch' in data:
         int(data['electra_fork_epoch']) * ( 32 if data['preset_base']=='mainnet' else 8 ) * int(data['slot_duration_in_seconds'])
     )
 
-if 'fulu_fork_epoch' in data:
+if 'fulu_fork_epoch' in data and data['fulu_fork_epoch'] is not None:
     out['params']['eip7692TransitionTimestamp'] = hex(
         int(data['genesis_timestamp']) + \
         int(data['genesis_delay']) + \
Index: ethereum-genesis-generator-3.4.0/apps/el-gen/genesis_geth.py
===================================================================
--- ethereum-genesis-generator-3.4.0.orig/apps/el-gen/genesis_geth.py
+++ ethereum-genesis-generator-3.4.0/apps/el-gen/genesis_geth.py
@@ -5,11 +5,11 @@ import sys
 
 w3.eth.account.enable_unaudited_hdwallet_features()
 
-testnet_config_path = "genesis-config.yaml"
-mainnet_config_path = "/apps/el-gen/mainnet/genesis.json"
-sepolia_config_path = "/apps/el-gen/sepolia/genesis.json"
-goerli_config_path = "/apps/el-gen/goerli/genesis.json"
-holesky_config_path = "/apps/el-gen/holesky/genesis.json"
+testnet_config_path = "config/el/genesis-config.yaml"
+mainnet_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/mainnet/genesis.json"
+sepolia_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/sepolia/genesis.json"
+goerli_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/goerli/genesis.json"
+holesky_config_path = "/usr/lib/ethereum-genesis-generator/apps/el-gen/holesky/genesis.json"
 combined_allocs = {}
 if len(sys.argv) > 1:
     testnet_config_path = sys.argv[1]
@@ -181,13 +181,13 @@ else:
     for addr, account in data['additional_preloaded_contracts'].items():
         add_alloc_entry(addr, account)
 
-if 'electra_fork_epoch' in data:
+if 'electra_fork_epoch' in data and data['electra_fork_epoch'] is not None:
     out['config']['pragueTime'] = \
         int(data['genesis_timestamp']) + \
         int(data['genesis_delay']) + \
         int(data['electra_fork_epoch']) * ( 32 if data['preset_base']=='mainnet' else 8 ) * int(data['slot_duration_in_seconds'])
 
-if 'fulu_fork_epoch' in data:
+if 'fulu_fork_epoch' in data and data['fulu_fork_epoch'] is not None:
     out['config']['osakaTime'] =  \
         int(data['genesis_timestamp']) + \
         int(data['genesis_delay']) + \
Index: ethereum-genesis-generator-3.4.0/apps/el-gen/requirements.txt
===================================================================
--- ethereum-genesis-generator-3.4.0.orig/apps/el-gen/requirements.txt
+++ ethereum-genesis-generator-3.4.0/apps/el-gen/requirements.txt
@@ -1,3 +1,42 @@
+aiohappyeyeballs==2.4.3
+aiohttp==3.10.8
+aiosignal==1.3.1
+altgraph==0.17.4
+annotated-types==0.7.0
+attrs==24.2.0
+bitarray==2.9.2
+certifi==2024.8.30
+charset-normalizer==3.3.2
+ckzg==2.0.1
+cytoolz==0.12.3
+eth-account==0.13.4
+eth-hash==0.7.0
+eth-keyfile==0.8.1
+eth-keys==0.5.1
+eth-rlp==2.1.0
+eth-typing==5.0.0
+eth-utils==5.0.0
+eth_abi==5.1.0
+frozenlist==1.4.1
+hexbytes==1.2.1
+idna==3.10
+multidict==6.1.0
+packaging==24.1
+parsimonious==0.10.0
+pycryptodome==3.21.0
+pydantic==2.9.2
+pydantic_core==2.23.4
+pyinstaller==6.10.0
+pyinstaller-hooks-contrib==2024.8
+pyunormalize==16.0.0
+regex==2024.9.11
+requests==2.32.3
+rlp==4.0.1
 ruamel.yaml==0.17.16
-web3>=6.15.0
-setuptools>=69.1.0
\ No newline at end of file
+toolz==0.12.1
+types-requests==2.32.0.20240914
+typing_extensions==4.12.2
+urllib3==2.2.3
+web3==7.3.0
+websockets==13.1
+yarl==1.13.1
